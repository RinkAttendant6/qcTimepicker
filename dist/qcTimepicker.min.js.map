{"version":3,"file":"qcTimepicker.min.js","sources":["../src/qcTimepicker.js"],"sourcesContent":["'use strict';\n\nimport $ from 'jquery';\n\n/**\n * Autoincrement number for inputs without identifiers\n * @type number\n */\nvar i = 0;\n\nfunction validPartialTime(t) {\n    return /^([0-1]?[0-9]|[2][0-3]):([0-5][0-9])(:([0-5][0-9]))?$/.test(t);\n}\n\n/**\n * Converts a partial time into seconds of day\n * @param {string} t A partial time as defined by RFC 3339\n * @param {boolean} [strict=false] Whether malformed partial times are accepted\n * @returns {number}\n */\nfunction timeToSeconds(t, strict) {\n    var regex;\n\n    strict = strict || false;\n    regex = strict\n        ? /^([0-1]?[0-9]|[2][0-3]):([0-5][0-9])(:([0-5][0-9]))?$/\n        : /^\\d+(:\\d+){0,2}$/;\n\n    if (!regex.test(t)) {\n        throw 'InvalidArgumentException';\n    }\n\n    t = $.map(t.split(':'), function (part) {\n        return parseInt(part, 10);\n    });\n    return ((t[0] * 3600 || 0) + (t[1] * 60 || 0) + (t[2] || 0)) % 86400;\n}\n\n/**\n * Converts a Date object into seconds of day\n * @param {!Date} date A Date object\n * @returns {number}\n */\nfunction dateInstanceToSeconds(date) {\n    if (!(date instanceof Date)) {\n        throw 'InvalidArgumentException';\n    }\n\n    return date.getHours() * 3600 + date.getMinutes() * 60 + date.getSeconds();\n}\n\n/**\n * Pads a number with leading zeros\n * @param {(number|string)} num The number to pad\n * @param {number} [len=2] The desired length\n * @returns {string} The padded number\n */\nfunction padNumber(num, len) {\n    len = len || 2;\n    num = num + '';\n\n    if (num.length >= len) {\n        return num;\n    }\n\n    var arr = [];\n    arr.length = len + 1 - num.length;\n    return arr.join('0') + num;\n}\n\n/**\n * Formats a time according to ICU formats\n * @param {string} format The format to use\n * @param {(number|string)} seconds The seconds of the day\n * @returns {string}\n */\nfunction formatTime(format, seconds) {\n    seconds = Number(seconds);\n\n    var time = {\n            hours: Math.floor(seconds / 3600),\n            minutes: Math.floor((seconds % 3600) / 60),\n            seconds: seconds % 60,\n        },\n        data = {\n            hh: padNumber(time.hours % 12 || 12),\n            h: (time.hours % 12 || 12) + '',\n            HH: padNumber(time.hours),\n            H: time.hours + '',\n            kk: padNumber(time.hours + 1),\n            k: time.hours + 1 + '',\n            KK: padNumber((time.hours % 12) + 1),\n            K: (time.hours % 12) + 1 + '',\n            mm: padNumber(time.minutes),\n            m: time.minutes + '',\n            ss: padNumber(time.seconds),\n            s: time.seconds + '',\n            A: seconds * 1000 + '',\n            a: seconds < 43200 ? 'am' : 'pm',\n        },\n        symbol,\n        regexCallback;\n\n    regexCallback = function ($0, $1, $2) {\n        return $1 ? $0 : data[$2];\n    };\n\n    for (symbol in data) {\n        if (Object.prototype.hasOwnProperty.call(data, symbol)) {\n            format = format.replace(\n                new RegExp('(\\\\\\\\)?(' + symbol + ')', 'g'),\n                regexCallback\n            );\n        }\n    }\n\n    // Strip slashes\n    return format.replace(/\\\\/g, '');\n}\n\n/**\n * Sets the time of a dropdown\n * @param {string} time A partial-time as defined by RFC 3339\n * @param {!HTMLSelectElement} dropdown The timepicker element\n */\nfunction setTime(time, dropdown) {\n    if (\n        $(dropdown.children).filter(function () {\n            return this.value === time;\n        }).length\n    ) {\n        // Value exists in dropdown\n        dropdown.value = time;\n    }\n}\n\n/**\n * Methods available to qcTimepicker\n * @type Object.<string, function(...[object])>\n */\nvar methods = {\n    init: function (o) {\n        var select = document.createElement('select'),\n            placeholderOpt = document.createElement('option');\n\n        placeholderOpt.value = '';\n        select.appendChild(placeholderOpt);\n\n        return this.filter('input')\n            .each(function () {\n                var that = this,\n                    tSelect = select.cloneNode(true),\n                    opt,\n                    labels = $('label[for=\"' + that.id + '\"]'),\n                    options,\n                    time;\n\n                options = $.extend({}, $.fn.qcTimepicker.defaults, o);\n\n                // Prevent double-instantiation\n                if (that.getAttribute('data-qctimepicker-id')) {\n                    return;\n                }\n\n                // Add classes\n                if (options.classes) {\n                    if (\n                        typeof options.classes === 'object' &&\n                        options.classes instanceof Array\n                    ) {\n                        $.each(options.classes, function (i, v) {\n                            tSelect.className += ' ' + v;\n                        });\n                        tSelect.className = $.trim(tSelect.className);\n                    } else if (typeof options.classes === 'string') {\n                        tSelect.className = options.classes;\n                    }\n                }\n\n                // Take into account max and min attributes where present\n                if (\n                    (that.min || that.getAttribute('min')) &&\n                    validPartialTime(that.min || that.getAttribute('min'))\n                ) {\n                    options.minTime = timeToSeconds(\n                        that.min || that.getAttribute('min'),\n                        true\n                    );\n                } else if (options.minTime instanceof Date) {\n                    options.minTime = dateInstanceToSeconds(options.minTime);\n                } else {\n                    options.minTime = timeToSeconds(options.minTime);\n                }\n\n                if (\n                    (that.max || that.getAttribute('max')) &&\n                    validPartialTime(that.max || that.getAttribute('max'))\n                ) {\n                    options.maxTime = timeToSeconds(\n                        that.max || that.getAttribute('max'),\n                        true\n                    );\n                } else if (options.maxTime instanceof Date) {\n                    options.maxTime = dateInstanceToSeconds(options.maxTime);\n                } else {\n                    options.maxTime = timeToSeconds(options.maxTime);\n                }\n\n                // Take into account step attribute where present\n                options.step =\n                    Number(that.step) ||\n                    (that.getAttribute('step')\n                        ? Number(that.getAttribute('step'))\n                        : null) ||\n                    (that.step === 'any' || that.getAttribute('step') === 'any'\n                        ? 1\n                        : null) ||\n                    options.step;\n\n                if (\n                    typeof options.step !== 'number' ||\n                    isNaN(options.step) ||\n                    options.step <= 0 ||\n                    options.step % 1 !== 0\n                ) {\n                    options.step = $.fn.qcTimepicker.defaults.step;\n                }\n\n                // Generate options\n                for (\n                    time = options.minTime;\n                    time <= options.maxTime;\n                    time += options.step\n                ) {\n                    opt = document.createElement('option');\n                    opt.innerHTML = formatTime(options.format, time);\n                    opt.value = formatTime('HH:mm:ss', time);\n\n                    tSelect.appendChild(opt);\n                }\n\n                // Copy over current value if possible\n                setTime(that.value, tSelect);\n\n                // Keep controls in sync\n                tSelect.onchange = function () {\n                    that.value = this.value;\n                };\n\n                that.onchange = function () {\n                    setTime(this.value, tSelect);\n                };\n\n                // If input is time, copy over properties as required\n                if (that.type === 'time') {\n                    that.step = options.step;\n                    that.min = formatTime('HH:mm:ss', options.minTime);\n                    that.max = formatTime('HH:mm:ss', options.maxTime);\n                }\n\n                // If input is required\n                tSelect.required =\n                    that.required ||\n                    that.getAttribute('required') === 'required';\n\n                // If input is disabled or readonly\n                tSelect.disabled = that.readOnly || that.disabled;\n\n                // Placeholder\n                tSelect.firstChild.innerHTML =\n                    (that.dataset ? that.dataset.placeholder : false) ||\n                    that.getAttribute('data-placeholder') ||\n                    that.placeholder ||\n                    that.getAttribute('placeholder') ||\n                    options.placeholder;\n\n                if (that.id) {\n                    tSelect.id = that.id + '-qcTimepicker';\n                } else {\n                    tSelect.id = 'qcTimepicker-' + i++;\n                }\n\n                // Change label references if necessary\n                if (labels.length) {\n                    $.each(labels, function (i, v) {\n                        v.htmlFor = that.id + '-qcTimepicker';\n                    });\n                }\n\n                // Append it!\n                that.parentNode.insertBefore(tSelect, that.nextSibling);\n                that.setAttribute('data-qctimepicker-id', tSelect.id);\n\n                // Hide the input and make it non-focusable\n                that._origDisplay = that.style.display;\n                that._origTabIndex = that.tabIndex;\n\n                that.style.display = 'none';\n                that.tabIndex = -1;\n            })\n            .end();\n    },\n\n    hide: function () {\n        return this.filter('input')\n            .each(function () {\n                $('#' + this.getAttribute('data-qctimepicker-id')).hide();\n            })\n            .end();\n    },\n\n    show: function () {\n        return this.filter('input')\n            .each(function () {\n                $('#' + this.getAttribute('data-qctimepicker-id')).show();\n            })\n            .end();\n    },\n\n    destroy: function () {\n        return this.filter('input[data-qctimepicker-id]')\n            .each(function () {\n                var el = document.getElementById(\n                    this.getAttribute('data-qctimepicker-id')\n                );\n                el.parentNode.removeChild(el);\n\n                this.style.display = this._origDisplay;\n                this.tabIndex = this._origTabIndex;\n                this.removeAttribute('data-qctimepicker-id');\n            })\n            .end();\n    },\n\n    options: function (o) {\n        return this.filter('input[data-qctimepicker-id]')\n            .each(function () {\n                var el = document.getElementById(\n                    this.getAttribute('data-qctimepicker-id')\n                );\n\n                if ('required' in o) {\n                    el.required = Boolean(o.required);\n                }\n            })\n            .end();\n    },\n\n    valueAsDate: function () {\n        var input = this.filter('input[data-qctimepicker-id]')[0];\n        if (input.value === '') {\n            return null;\n        }\n        return (\n            input.valueAsDate ||\n            new Date('Thu, 1 Jan 1970 ' + input.value + ' GMT')\n        );\n    },\n\n    valueAsNumber: function () {\n        var input = this.filter('input[data-qctimepicker-id]')[0];\n        if (input.value === '') {\n            return Number.NaN;\n        }\n        return input.type === 'time'\n            ? input.valueAsNumber\n            : Date.parse('Thu, 1 Jan 1970 ' + input.value + ' GMT');\n    },\n\n    stepUp: function () {\n        return this.filter('input[data-qctimepicker-id]')\n            .each(function () {\n                var el = document.getElementById(\n                    this.getAttribute('data-qctimepicker-id')\n                );\n\n                if (\n                    this.value === '' ||\n                    el.selectedIndex === 0 ||\n                    el.selectedIndex === el.children.length - 1\n                ) {\n                    throw 'InvalidStateError';\n                }\n\n                el.selectedIndex += 1;\n                $(el).trigger('change');\n            })\n            .end();\n    },\n\n    stepDown: function () {\n        return this.filter('input[data-qctimepicker-id]')\n            .each(function () {\n                var el = document.getElementById(\n                    this.getAttribute('data-qctimepicker-id')\n                );\n\n                if (this.value === '' || el.selectedIndex <= 1) {\n                    throw 'InvalidStateError';\n                }\n\n                el.selectedIndex -= 1;\n                $(el).trigger('change');\n            })\n            .end();\n    },\n};\n\n/**\n * Calls to qcTimepicker\n * @param {(string|Object)=} args\n */\n$.fn.qcTimepicker = function (args) {\n    if (methods[args]) {\n        return methods[args].apply(\n            this,\n            Array.prototype.slice.call(arguments, 1)\n        );\n    }\n\n    if (typeof args === 'object' || !args) {\n        // Default to \"init\"\n        return methods.init.apply(this, arguments);\n    }\n\n    $.error('Method ' + args + ' does not exist on jQuery.qcTimepicker');\n};\n\n/**\n * Default options\n * @struct\n */\n$.fn.qcTimepicker.defaults = {\n    classes: '',\n    format: 'H:mm',\n    minTime: '0:00:00',\n    maxTime: '23:59:59',\n    step: 1800,\n    placeholder: '-',\n};\n"],"names":["i","validPartialTime","t","test","timeToSeconds","strict","$","map","split","part","parseInt","dateInstanceToSeconds","date","Date","getHours","getMinutes","getSeconds","padNumber","num","len","length","arr","join","formatTime","format","seconds","Number","symbol","regexCallback","time","hours","Math","floor","minutes","data","hh","h","HH","H","kk","k","KK","K","mm","m","ss","s","A","a","$0","$1","$2","Object","prototype","hasOwnProperty","call","replace","RegExp","setTime","dropdown","children","filter","this","value","methods","init","o","select","document","createElement","placeholderOpt","appendChild","each","opt","options","that","tSelect","cloneNode","labels","id","extend","fn","qcTimepicker","defaults","getAttribute","classes","Array","v","className","trim","min","minTime","max","maxTime","step","isNaN","innerHTML","onchange","type","required","disabled","readOnly","firstChild","dataset","placeholder","htmlFor","parentNode","insertBefore","nextSibling","setAttribute","_origDisplay","style","display","_origTabIndex","tabIndex","end","hide","show","destroy","el","getElementById","removeChild","removeAttribute","Boolean","valueAsDate","input","valueAsNumber","NaN","parse","stepUp","selectedIndex","trigger","stepDown","args","apply","slice","arguments","error"],"mappings":"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"}