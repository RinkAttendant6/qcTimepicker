{"version":3,"file":"qcTimepicker.min.js","sources":["../src/qcTimepicker.js"],"sourcesContent":["'use strict';\n\nimport $ from 'jquery';\n    \n    /**\n     * Autoincrement number for inputs without identifiers\n     * @type number\n     */\n    var i = 0;\n    \n    function validPartialTime(t) {\n        return /^([0-1]?[0-9]|[2][0-3]):([0-5][0-9])(:([0-5][0-9]))?$/.test(t);\n    }\n\n    /**\n     * Converts a partial time into seconds of day\n     * @param {string} t A partial time as defined by RFC 3339\n     * @param {boolean} [strict=false] Whether malformed partial times are accepted\n     * @returns {number}\n     */\n    function timeToSeconds(t, strict) {\n        var regex;\n        \n        strict = strict || false;\n        regex = (strict ? /^([0-1]?[0-9]|[2][0-3]):([0-5][0-9])(:([0-5][0-9]))?$/ : /^\\d+(:\\d+){0,2}$/);\n        \n        if (!regex.test(t)) {\n            throw 'InvalidArgumentException';\n        }\n        \n        t = $.map(t.split(':'), function(part) {\n            return parseInt(part, 10);\n        });\n        return ((t[0] * 3600 || 0) + (t[1] * 60 || 0) + (t[2] || 0)) % 86400;\n    }\n    \n    /**\n     * Converts a Date object into seconds of day\n     * @param {!Date} date A Date object\n     * @returns {number}\n     */\n    function dateInstanceToSeconds(date) {\n        if(!(date instanceof Date)) {\n            throw 'InvalidArgumentException';\n        }\n        \n        return date.getHours() * 3600 + date.getMinutes() * 60 + date.getSeconds();\n    }\n    \n    /**\n     * Pads a number with leading zeros\n     * @param {(number|string)} num The number to pad\n     * @param {number} [len=2] The desired length\n     * @returns {string} The padded number\n     */\n    function padNumber(num, len) {\n        len = len || 2;\n        num = num+'';\n        \n        if(num.length >= len) {\n            return num;\n        }\n        \n        var arr = [];\n        arr.length = len + 1 - num.length;\n        return arr.join('0') + num;\n    }\n    \n    /**\n     * Formats a time according to ICU formats\n     * @param {string} format The format to use\n     * @param {(number|string)} seconds The seconds of the day\n     * @returns {string}\n     */\n    function formatTime(format, seconds) {\n        seconds = Number(seconds);\n        \n        var time = {\n            hours: Math.floor(seconds / 3600),\n            minutes: Math.floor(seconds % 3600 / 60),\n            seconds: seconds % 60\n        },\n        \n        data = {\n            'hh': padNumber((time.hours % 12) || 12),\n            'h': ((time.hours % 12) || 12) + '',\n            'HH': padNumber(time.hours),\n            'H': time.hours + '',\n            'kk': padNumber(time.hours + 1),\n            'k': time.hours + 1 + '',\n            'KK': padNumber(time.hours % 12 + 1),\n            'K': time.hours % 12 + 1 + '',\n            'mm': padNumber(time.minutes),\n            'm': time.minutes + '',\n            'ss': padNumber(time.seconds),\n            's': time.seconds + '',\n            'A': seconds * 1000 + '',\n            'a': seconds < 43200 ? 'am' : 'pm'\n        }, symbol, regexCallback;\n        \n        regexCallback = function($0, $1, $2) {\n            return $1 ? $0 : data[$2];\n        };\n        \n        for (symbol in data) {\n            if (Object.prototype.hasOwnProperty.call(data, symbol)) {\n                format = format.replace(new RegExp('(\\\\\\\\)?(' + symbol + ')', 'g'), regexCallback);\n            }\n        }\n        \n        // Strip slashes\n        return format.replace(/\\\\/g, '');\n    }\n    \n    /**\n     * Sets the time of a dropdown\n     * @param {string} time A partial-time as defined by RFC 3339\n     * @param {!HTMLSelectElement} dropdown The timepicker element\n     */\n    function setTime(time, dropdown) {\n        if($(dropdown.children).filter(function() {\n            return this.value === time;\n        }).length) {\n            // Value exists in dropdown\n            dropdown.value = time;\n        }\n    }\n    \n    /**\n     * Methods available to qcTimepicker\n     * @type Object.<string, function(...[object])>\n     */\n    var methods = {\n        init: function(o) {\n            var select = document.createElement('select'),\n                placeholderOpt = document.createElement('option');\n\n            placeholderOpt.value = '';\n            select.appendChild(placeholderOpt);\n            \n            return this.filter('input').each(function() {\n                var that = this,\n                    tSelect = select.cloneNode(true),\n                    opt,\n                    labels = $('label[for=\"' + that.id + '\"]'),\n                    options, time;\n                    \n                options = $.extend({}, $.fn.qcTimepicker.defaults, o);\n                \n                // Prevent double-instantiation\n                if(that.getAttribute('data-qctimepicker-id')) {\n                    return;\n                }\n            \n                // Add classes\n                if(options.classes) {\n                    if(typeof options.classes === 'object' && options.classes instanceof Array) {\n                        $.each(options.classes, function(i, v) {\n                            tSelect.className += ' ' + v;\n                        });\n                        tSelect.className = $.trim(tSelect.className);\n                    } else if(typeof options.classes === 'string') {\n                        tSelect.className = options.classes;\n                    }\n                }\n                \n                // Take into account max and min attributes where present\n                if ((that.min || that.getAttribute('min')) && validPartialTime(that.min || that.getAttribute('min'))) {\n                    options.minTime = timeToSeconds(that.min || that.getAttribute('min'), true);\n                } else if (options.minTime instanceof Date) {\n                    options.minTime = dateInstanceToSeconds(options.minTime);\n                } else {\n                    options.minTime = timeToSeconds(options.minTime);\n                }\n                \n                if ((that.max || that.getAttribute('max')) && validPartialTime(that.max || that.getAttribute('max'))) {\n                    options.maxTime = timeToSeconds(that.max || that.getAttribute('max'), true);\n                } else if (options.maxTime instanceof Date) {\n                    options.maxTime = dateInstanceToSeconds(options.maxTime);\n                } else {\n                    options.maxTime = timeToSeconds(options.maxTime);\n                }\n\n                // Take into account step attribute where present\n                options.step = Number(that.step) ||\n                               (that.getAttribute('step') ? Number(that.getAttribute('step')) : null) ||\n                               (that.step === 'any' || that.getAttribute('step') === 'any' ? 1 : null) ||\n                               options.step;\n                \n                if (typeof options.step !== 'number' || isNaN(options.step) || options.step <= 0 || options.step % 1 !== 0) {\n                    options.step = $.fn.qcTimepicker.defaults.step;\n                }\n\n                // Generate options\n                for(time = options.minTime; time <= options.maxTime; time += options.step) {\n                    opt = document.createElement('option');\n                    opt.innerHTML = formatTime(options.format, time);\n                    opt.value = formatTime('HH:mm:ss', time);\n\n                    tSelect.appendChild(opt);\n                }\n                \n                // Copy over current value if possible\n                setTime(that.value, tSelect);\n                    \n                // Keep controls in sync\n                tSelect.onchange = function() {\n                    that.value = this.value;\n                };\n                \n                that.onchange = function() {\n                    setTime(this.value, tSelect);\n                };\n                \n                // If input is time, copy over properties as required\n                if (that.type === 'time') {\n                    that.step = options.step;\n                    that.min = formatTime('HH:mm:ss', options.minTime);\n                    that.max = formatTime('HH:mm:ss', options.maxTime);\n                }\n                \n                // If input is required\n                tSelect.required = (that.required || that.getAttribute('required') === 'required');\n                \n                // If input is disabled or readonly\n                tSelect.disabled = that.readOnly || that.disabled;\n                \n                // Placeholder\n                tSelect.firstChild.innerHTML = (that.dataset ? that.dataset.placeholder : false) || that.getAttribute('data-placeholder') || that.placeholder || that.getAttribute('placeholder') || options.placeholder;\n                \n                if(that.id) {\n                    tSelect.id = that.id + '-qcTimepicker';\n                } else {\n                    tSelect.id = 'qcTimepicker-' + (i++);\n                }\n                \n                // Change label references if necessary\n                if(labels.length) {\n                    $.each(labels, function(i, v) {\n                        v.htmlFor = that.id + '-qcTimepicker';\n                    });\n                }\n                \n                // Append it!\n                that.parentNode.insertBefore(tSelect, that.nextSibling);\n                that.setAttribute('data-qctimepicker-id', tSelect.id);\n                \n                // Hide the input and make it non-focusable\n                that._origDisplay = that.style.display;\n                that._origTabIndex = that.tabIndex;\n                \n                that.style.display = 'none';\n                that.tabIndex = -1;\n            }).end();\n        },\n        \n        hide: function() {\n            return this.filter('input').each(function() {\n                $('#' + this.getAttribute('data-qctimepicker-id')).hide();\n            }).end();\n        },\n        \n        show: function() {\n            return this.filter('input').each(function() {\n                $('#' + this.getAttribute('data-qctimepicker-id')).show();\n            }).end();\n        },\n        \n        destroy: function() {\n            return this.filter('input[data-qctimepicker-id]').each(function() {\n                var el = document.getElementById(this.getAttribute('data-qctimepicker-id'));\n                el.parentNode.removeChild(el);\n                \n                this.style.display = this._origDisplay;\n                this.tabIndex = this._origTabIndex;\n                this.removeAttribute('data-qctimepicker-id');\n            }).end();\n        },\n        \n        options: function(o) {\n            return this.filter('input[data-qctimepicker-id]').each(function() {\n                var el = document.getElementById(this.getAttribute('data-qctimepicker-id'));\n                \n                if ('required' in o) {\n                    el.required = Boolean(o.required);\n                }\n            }).end();\n        },\n        \n        valueAsDate: function() {\n            var input = this.filter('input[data-qctimepicker-id]')[0];\n            if (input.value === '') {\n                return null;\n            }\n            return input.valueAsDate || (new Date('Thu, 1 Jan 1970 ' + input.value + ' GMT'));\n        },\n        \n        valueAsNumber: function() {\n            var input = this.filter('input[data-qctimepicker-id]')[0];\n            if (input.value === '') {\n                return Number.NaN;\n            }\n            return input.type === 'time' ? input.valueAsNumber : Date.parse('Thu, 1 Jan 1970 ' + input.value + ' GMT');\n        },\n        \n        stepUp: function() {\n            return this.filter('input[data-qctimepicker-id]').each(function() {\n                var el = document.getElementById(this.getAttribute('data-qctimepicker-id'));\n                \n                if (this.value === '' || el.selectedIndex === 0 || el.selectedIndex === el.children.length - 1) {\n                    throw 'InvalidStateError';\n                }\n                \n                el.selectedIndex += 1;\n                $(el).trigger('change');\n            }).end();\n        },\n        \n        stepDown: function() {\n            return this.filter('input[data-qctimepicker-id]').each(function() {\n                var el = document.getElementById(this.getAttribute('data-qctimepicker-id'));\n                \n                if (this.value === '' || el.selectedIndex <= 1) {\n                    throw 'InvalidStateError';\n                }\n                \n                el.selectedIndex -= 1;\n                $(el).trigger('change');\n            }).end();\n        }\n    };\n    \n    /**\n     * Calls to qcTimepicker\n     * @param {(string|Object)=} args\n     */\n    $.fn.qcTimepicker = function(args) {\n    \n        if (methods[args]) {\n            return methods[args].apply( this, Array.prototype.slice.call( arguments, 1 ));\n        }\n        \n        if (typeof args === 'object' || !args) {\n            // Default to \"init\"\n            return methods.init.apply( this, arguments );\n        }\n        \n        $.error('Method ' + args + ' does not exist on jQuery.qcTimepicker');\n    };\n    \n    /**\n     * Default options\n     * @struct\n     */\n    $.fn.qcTimepicker.defaults = {\n        classes: '',\n        format: 'H:mm',\n        minTime: '0:00:00',\n        maxTime: '23:59:59',\n        step: 1800,\n        placeholder: '-'\n    };"],"names":["i","validPartialTime","t","test","timeToSeconds","strict","$","map","split","part","parseInt","dateInstanceToSeconds","date","Date","getHours","getMinutes","getSeconds","padNumber","num","len","length","arr","join","formatTime","format","seconds","Number","symbol","regexCallback","time","hours","Math","floor","minutes","data","hh","h","HH","H","kk","k","KK","K","mm","m","ss","s","A","a","$0","$1","$2","Object","prototype","hasOwnProperty","call","replace","RegExp","setTime","dropdown","children","filter","this","value","methods","init","o","select","document","createElement","placeholderOpt","appendChild","each","opt","options","that","tSelect","cloneNode","labels","id","extend","fn","qcTimepicker","defaults","getAttribute","classes","Array","v","className","trim","min","minTime","max","maxTime","step","isNaN","innerHTML","onchange","type","required","disabled","readOnly","firstChild","dataset","placeholder","htmlFor","parentNode","insertBefore","nextSibling","setAttribute","_origDisplay","style","display","_origTabIndex","tabIndex","end","hide","show","destroy","el","getElementById","removeChild","removeAttribute","Boolean","valueAsDate","input","valueAsNumber","NaN","parse","stepUp","selectedIndex","trigger","stepDown","args","apply","slice","arguments","error"],"mappings":"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"}